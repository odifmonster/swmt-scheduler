from app.inventory.groups.rgroup_types import StyleProps as StyleProps, SizeProps as SizeProps

from typing import Unpack, overload
from app.groups import GKeys, GroupedView, Grouped
from app.style import GreigeStyle
from app.inventory.roll import Roll, RollView, SizeClass

type RSizeKeys = GKeys[str, str]
type RStyleKeys = GKeys[str, SizeClass, str]
type InvKeys = GKeys[str, GreigeStyle, SizeClass, str]

class RSizeView(GroupedView[str, str]):
    """
    A class for views of RSizeGroup objects.
    """
    def __init__(self, link: 'RSizeGroup') -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'RSizeView': ...
    @overload
    def __getitem__(self, key: str | tuple[str]) -> RollView: ...
    def add(self, data: Roll) -> None: ...
    def remove(self, dview: RollView) -> Roll: ...
    def fullkeys(self) -> RSizeKeys: ...

class RSizeGroup(Grouped[str, str]):
    """
    A subtype of Grouped for grouping Roll objects. They must share the same greige style and
    size class.
    """
    def __init__(self, **kwargs: Unpack[SizeProps]) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> RSizeView: ...
    @overload
    def __getitem__(self, key: str | tuple[str]) -> RollView: ...
    def add(self, data: Roll) -> None: ...
    def remove(self, dview: RollView) -> None: ...
    def fullkeys(self) -> RSizeKeys: ...
    def view(self) -> RSizeView: ...

class RStyleView(GroupedView[str, SizeClass]):
    """
    A class for views of RStyleGroup objects.
    """
    def __init__(self, link: 'RStyleGroup') -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'RStyleView': ...
    @overload
    def __getitem__(self, key: SizeClass | tuple[SizeClass]) -> RSizeView: ...
    @overload
    def __getitem__(self, key: tuple[SizeClass, str]) -> RollView: ...
    def add(self, data: Roll) -> None: ...
    def remove(self, dview: RollView) -> Roll: ...
    def fullkeys(self) -> RStyleKeys: ...

class RStyleGroup(Grouped[str, SizeClass]):
    """
    A subtype of Grouped for grouping Roll objects. They must share the same greige style.
    """
    def __init__(self, **kwargs: Unpack[StyleProps]) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> RStyleView: ...
    @overload
    def __getitem__(self, key: SizeClass | tuple[SizeClass]) -> RSizeView: ...
    @overload
    def __getitem__(self, key: tuple[SizeClass, str]) -> RollView: ...
    def add(self, data: Roll) -> None: ...
    def remove(self, dview: RollView) -> None: ...
    def fullkeys(self) -> RStyleKeys: ...
    def view(self) -> RStyleView: ...

class InvView(GroupedView[str, GreigeStyle]):
    """
    A class for views of Inventory objects.
    """
    def __init__(self, link: 'Inventory') -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'InvView': ...
    @overload
    def __getitem__(self, key: GreigeStyle | tuple[GreigeStyle]) -> RStyleView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, SizeClass]) -> RSizeView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, SizeClass, str]) -> RollView: ...
    def add(self, data: Roll) -> None: ...
    def remove(self, dview: RollView) -> Roll: ...
    def fullkeys(self) -> InvKeys: ...

class Inventory(Grouped[str, GreigeStyle]):
    """
    A subtype of Grouped for grouping Roll objects. They must share the same greige style and
    size class.
    """
    def __init__(self) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> InvView: ...
    @overload
    def __getitem__(self, key: GreigeStyle | tuple[GreigeStyle]) -> RStyleView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, SizeClass]) -> RSizeView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, SizeClass, str]) -> RollView: ...
    def add(self, data: Roll) -> None: ...
    def remove(self, dview: RollView) -> None: ...
    def fullkeys(self) -> InvKeys: ...
    def view(self) -> InvView: ...