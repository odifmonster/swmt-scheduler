from app.inventory import roll as roll
from app.inventory.groups.groups import SizeProps as SizeProps, StyleProps as StyleProps

from typing import Unpack, overload
from app.support import PrettyArgsOpt
from app.support.groups import GroupedView, Grouped
from app.style import GreigeStyle

class SizeGroupView(GroupedView[str, PrettyArgsOpt, str],
                    no_access=['add','remove'],
                    overrides=[],
                    dunders=['len','iter','contains','getitem']):
    """
    A class for views of SizeGroup objects.
    """
    @overload
    def __getitem__(self, key: tuple[()]) -> 'SizeGroupView': ...
    @overload
    def __getitem__(self, key: str | tuple[str]) -> roll.RollView: ...

class SizeGroup(Grouped[str, PrettyArgsOpt, str]):
    """
    A Grouped subtype whose data is Roll objects. The contents must match on
    greige style and 'size class'.
    """
    def __init__(self, **props: Unpack[SizeProps]) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> SizeGroupView: ...
    @overload
    def __getitem__(self, key: str | tuple[str]) -> roll.RollView: ...
    def add(self, data: roll.Roll) -> None: ...
    def remove(self, id: str) -> roll.Roll: ...
    def view(self) -> SizeGroupView: ...

class StyleGroupView(GroupedView[str, PrettyArgsOpt, roll.SizeClass, str],
                     no_access=['add','remove'],
                     overrides=[],
                     dunders=['len','iter','contains','getitem']):
    """
    A class for views of StyleGroup objects.
    """
    @overload
    def __getitem__(self, key: tuple[()]) -> 'StyleGroupView': ...
    @overload
    def __getitem__(self, key: roll.SizeClass | tuple[roll.SizeClass]) -> SizeGroupView: ...
    @overload
    def __getitem__(self, key: tuple[roll.SizeClass, str]) -> roll.RollView: ...

class StyleGroup(Grouped[str, PrettyArgsOpt, roll.SizeClass, str]):
    """
    A Grouped subtype whose data is Roll objects. The contents must match on
    greige style.
    """
    def __init__(self, **props: Unpack[StyleProps]) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> StyleGroupView: ...
    @overload
    def __getitem__(self, key: roll.SizeClass | tuple[roll.SizeClass]) -> SizeGroupView: ...
    @overload
    def __getitem__(self, key: tuple[roll.SizeClass, str]) -> roll.RollView: ...
    def add(self, data: roll.Roll) -> None: ...
    def remove(self, id: str) -> roll.Roll: ...
    def view(self) -> StyleGroupView: ...

class InventoryView(GroupedView[str, PrettyArgsOpt, GreigeStyle, roll.SizeClass, str],
                    no_access=['add','remove'],
                    overrides=[],
                    dunders=['len','iter','contains','getitem']):
    """
    A class for views of Inventory objects.
    """
    @overload
    def __getitem__(self, key: tuple[()]) -> 'InventoryView': ...
    @overload
    def __getitem__(self, key: GreigeStyle | tuple[GreigeStyle]) -> StyleGroupView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, roll.SizeClass]) -> SizeGroupView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, roll.SizeClass, str]) -> roll.RollView: ...

class Inventory(Grouped[str, PrettyArgsOpt, GreigeStyle, roll.SizeClass, str]):
    """
    A Grouped subtype whose contents are Roll objects. They are organized by
    greige style and size class.
    """
    def __init__(self) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'InventoryView': ...
    @overload
    def __getitem__(self, key: GreigeStyle | tuple[GreigeStyle]) -> StyleGroupView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, roll.SizeClass]) -> SizeGroupView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, roll.SizeClass, str]) -> roll.RollView: ...
    def add(self, data: roll.Roll) -> None: ...
    def remove(self, id: str) -> roll.Roll: ...
    def view(self) -> InventoryView: ...