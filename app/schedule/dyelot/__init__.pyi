import datetime as dt
from app.support import HasID, SuperImmut, SuperView
from app.style import FabricStyle, GreigeStyle
from app.style.fabric.color import Color, ShadeGrade
from app.materials.inventory import PortLoad

class DyeLot(HasID[str], SuperImmut,
             attrs=('_prefix','id','ports','item','greige','shade','cycle_time',
                    'start','end','yds','lbs'),
             priv_attrs=('id','start','fin_time','view'),
             frozen=('*id','*fin_time','*view','ports','item','cycle_time')):
    @classmethod
    def from_adaptive(cls, id: str, start: dt.datetime, end: dt.datetime) -> 'DyeLot': ...
    @classmethod
    def new_strip(cls, item: FabricStyle, start: dt.datetime) -> 'DyeLot': ...
    @classmethod
    def new_lot(cls, item: FabricStyle, ports: list[PortLoad]) -> 'DyeLot': ...
    ports: tuple[PortLoad, ...]
    item: FabricStyle
    cycle_time: dt.timedelta
    def __init__(self, id: str, ports: tuple[PortLoad, ...], item: FabricStyle,
                 start: dt.datetime | None, cycle_time: dt.timedelta,
                 fin_time: dt.timedelta) -> None: ...
    def __repr__(self) -> str: ...
    @property
    def greige(self) -> GreigeStyle: ...
    @property
    def color(self) -> Color: ...
    @property
    def shade(self) -> ShadeGrade: ...
    @property
    def start(self) -> dt.datetime | None: ...
    @start.setter
    def start(self, new: dt.datetime | None) -> None: ...
    @property
    def end(self) -> dt.datetime | None: ...
    @property
    def yds(self) -> float: ...
    @property
    def lbs(self) -> float: ...
    def view(self) -> 'DyeLotView': ...

class DyeLotView(SuperView[DyeLot],
                 attrs=('_prefix','id','ports','item','greige','shade','cycle_time',
                        'start','end','yds','lbs'),
                 dunders=('eq','hash','repr')):
    ports: tuple[PortLoad, ...]
    item: FabricStyle
    cycle_time: dt.timedelta
    def __eq__(self, other: 'DyeLotView | DyeLot') -> bool: ...
    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    @property
    def greige(self) -> GreigeStyle: ...
    @property
    def shade(self) -> ShadeGrade: ...
    @property
    def start(self) -> dt.datetime | None: ...
    @start.setter
    def start(self, new: dt.datetime | None) -> None: ...
    @property
    def end(self) -> dt.datetime | None: ...
    @property
    def yds(self) -> float: ...
    @property
    def lbs(self) -> float: ...