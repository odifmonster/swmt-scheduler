from typing import Protocol
import datetime as dt
from app.support.grouped import Data, DataView
from app.style import FabricStyle, GreigeStyle, Color
from app.materials import PortLoad
from app.schedule import DyeLot, DyeLotView

class _Req(Protocol):
    item: FabricStyle
    @property
    def lots(self) -> list[DyeLotView]: ...
    @property
    def total_yds_prod(self) -> float: ...
    def total_yds_by(date: dt.datetime) -> float: ...
    def assign(rolls: list[PortLoad]) -> DyeLot: ...
    def unassign(lview: DyeLotView) -> DyeLot: ...

class Order(Data[str], mod_in_group=True,
            attrs=('item','greige','color','yds','cum_yds','total_yds','lbs','cum_lbs',
                   'total_lbs','pnum','due_date'),
            priv_attrs=('req','p1date','init_cur_yds','init_cum_yds'),
            frozen=('*req','*p1date','*init_cur_yds','*init_cum_yds','pnum','due_date')):
    pnum: int
    due_date: dt.datetime
    def __init__(self, req: _Req, pnum: int, cur_yds: float, cum_yds: float,
                 p1date: dt.datetime) -> None: ...
    @property
    def item(self) -> FabricStyle: ...
    @property
    def greige(self) -> GreigeStyle: ...
    @property
    def color(self) -> Color: ...
    @property
    def yds(self) -> float: ...
    @property
    def cum_yds(self) -> float: ...
    @property
    def total_yds(self) -> float: ...
    @property
    def lbs(self) -> float: ...
    @property
    def cum_lbs(self) -> float: ...
    @property
    def total_lbs(self) -> float: ...
    def late_table(self) -> list[tuple[float, dt.timedelta]]: ...
    def assign(self, ports: list[PortLoad]) -> DyeLot: ...
    def unassign(self, lview: DyeLotView) -> DyeLot: ...

class OrderView(DataView[str],
                attrs=('item','greige','color','yds','cum_yds','total_yds','lbs','cum_lbs',
                       'total_lbs','pnum','due_date'),
                funcs=('late_table','assign','unassign'),
                dunders=('repr',)):
    pnum: int
    due_date: dt.datetime
    def __init__(self, link: Order) -> None: ...
    @property
    def item(self) -> FabricStyle: ...
    @property
    def greige(self) -> GreigeStyle: ...
    @property
    def color(self) -> Color: ...
    @property
    def yds(self) -> float: ...
    @property
    def cum_yds(self) -> float: ...
    @property
    def total_yds(self) -> float: ...
    @property
    def lbs(self) -> float: ...
    @property
    def cum_lbs(self) -> float: ...
    @property
    def total_lbs(self) -> float: ...
    def late_table(self) -> list[tuple[float, dt.timedelta]]: ...
    def assign(self, ports: list[PortLoad]) -> DyeLot: ...
    def unassign(self, lview: DyeLotView) -> DyeLot: ...