from app.schedule.req.groups.group_types import GreigeProps as GreigeProps, ColorProps as ColorProps

from typing import Unpack, overload
from app.groups import GKeys, GroupedView, Grouped
from app.style import GreigeStyle, Color
from app.schedule import ReqView, Req

type ReqColorKeys = GKeys[str, str]
type ReqGreigeKeys = GKeys[str, Color, str]
type DemandKeys = GKeys[str, GreigeStyle, Color, str]

class ReqColorView(GroupedView[str, str]):
    """
    A class for views of ReqColorGroup objects.
    """
    def __init__(self, link: 'ReqColorGroup') -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'ReqColorView': ...
    @overload
    def __getitem__(self, key: str | tuple[str]) -> ReqView: ...
    def add(self, data: Req) -> None: ...
    def remove(self, dview: ReqView) -> Req: ...
    def fullkeys(self) -> ReqColorKeys: ...

class ReqColorGroup(Grouped[str, str]):
    """
    A subtype of Grouped for grouping Req objects. They must share the same greige style and
    color.
    """
    def __init__(self, **kwargs: Unpack[ColorProps]) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> ReqColorView: ...
    @overload
    def __getitem__(self, key: str | tuple[str]) -> ReqView: ...
    def add(self, data: Req) -> None: ...
    def remove(self, dview: ReqView) -> Req: ...
    def fullkeys(self) -> ReqColorKeys: ...
    def view(self) -> ReqColorView: ...

class ReqGreigeView(GroupedView[str, Color]):
    """
    A class for views of RStyleGroup objects.
    """
    def __init__(self, link: 'ReqGreigeGroup') -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'ReqGreigeView': ...
    @overload
    def __getitem__(self, key: Color | tuple[Color]) -> ReqColorView: ...
    @overload
    def __getitem__(self, key: tuple[Color, str]) -> ReqView: ...
    def add(self, data: Req) -> None: ...
    def remove(self, dview: ReqView) -> Req: ...
    def fullkeys(self) -> ReqGreigeKeys: ...

class ReqGreigeGroup(Grouped[str, Color]):
    """
    A subtype of Grouped for grouping Req objects. They must share the same greige style.
    """
    def __init__(self, **kwargs: Unpack[GreigeProps]) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> ReqGreigeView: ...
    @overload
    def __getitem__(self, key: Color | tuple[Color]) -> ReqColorView: ...
    @overload
    def __getitem__(self, key: tuple[Color, str]) -> ReqView: ...
    def add(self, data: Req) -> None: ...
    def remove(self, dview: ReqView) -> Req: ...
    def fullkeys(self) -> ReqGreigeKeys: ...
    def view(self) -> ReqGreigeView: ...

class DemandView(GroupedView[str, GreigeStyle]):
    """
    A class for views of Demand objects.
    """
    def __init__(self, link: 'Demand') -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> 'DemandView': ...
    @overload
    def __getitem__(self, key: GreigeStyle | tuple[GreigeStyle]) -> ReqGreigeView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, Color]) -> ReqColorView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, Color, str]) -> ReqView: ...
    def add(self, data: Req) -> None: ...
    def remove(self, dview: ReqView) -> Req: ...
    def fullkeys(self) -> DemandKeys: ...

class Demand(Grouped[str, GreigeStyle]):
    """
    A subtype of Grouped for grouping Req objects.
    """
    def __init__(self) -> None: ...
    @overload
    def __getitem__(self, key: tuple[()]) -> DemandView: ...
    @overload
    def __getitem__(self, key: GreigeStyle | tuple[GreigeStyle]) -> ReqGreigeView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, Color]) -> ReqColorView: ...
    @overload
    def __getitem__(self, key: tuple[GreigeStyle, Color, str]) -> ReqView: ...
    def add(self, data: Req) -> None: ...
    def remove(self, dview: ReqView) -> Req: ...
    def fullkeys(self) -> DemandKeys: ...
    def view(self) -> DemandView: ...