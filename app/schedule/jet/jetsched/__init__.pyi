import datetime as dt
from app.support import HasID, SuperImmut, DateRange
from app.style import FabricStyle, GreigeStyle
from app.schedule import DyeLot
from app.schedule.jet import Job

class JetSched(HasID[int], SuperImmut,
               attrs=('_prefix','id','soil_level','jobs_since_strip','rem_time',
                      'last_job_end','jobs'),
               priv_attrs=('id','init_soil','soil','init_jobs','jss','date_rng',
                           'jobs'),
               frozen=('*id','*init_soil','*init_jobs','*date_rng')):
    def __init__(self, date_rng: DateRange, prev_sched: 'JetSched | None' = None) -> None: ...
    @property
    def soil_level(self) -> int: ...
    @property
    def jobs_since_strip(self) -> int: ...
    @property
    def last_job_end(self) -> dt.datetime: ...
    @property
    def rem_time(self) -> dt.timedelta: ...
    @property
    def jobs(self) -> tuple[Job, ...]: ...
    def get_needed_strip(self, item: FabricStyle) -> FabricStyle | None: ...
    def can_add(self, lots: tuple[DyeLot, ...]) -> bool: ...
    def add_job(self, job: Job) -> None: ...
    def add_lots(self, lots: tuple[DyeLot, ...]) -> Job: ...
    def activate(self) -> None: ...
    def deactivate(self) -> None: ...
    def free_greige(self) -> dict[GreigeStyle, float]: ...